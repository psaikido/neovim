*hc.txt* - hughie's vim notes

SETUP:~
Edit this file at $HOME/neovim/doc/hc.txt

run :helptags ~/.config/nvim/doc/
This file should then show up with:
:h hc.txt

NB: `:h help-writing`


Increment numbers:~
Select a vertical list of numbers with CTRL-v then motion.
CTRL-A increments them all, you typically end up with a column of '2's.
Prefix with a 'g' and they will increment 2,3,4..


Delete all whitespace at the beginning of a string:~
%s:^\s\+::


Delete all whitespace at the end of a line:~
%s:\s\+$::


Delete blank rows:~
%s:^[\ \t]*$\n::g


Autoformat a file:~
gg=G


Indent everything inside {}:~
>iB


Indent everything inside {} for a whole file:~
g:\({\|}\):exe "normal >iB"


Format many files:~
vim -c 'bufdo exe "norm gg=G" | w' -c 'q' *.php
17:27 < \amethyst> psaikido:  bufdo runs a command on all buffers; exe runs a
                  string as a command (it's just a hack to get around the
                  multiple meanings of |)
17:27 < \amethyst> psaikido:  norm  runs a series of normal-mode keypresses
17:28 < \amethyst> psaikido:  and you know what w and q do
17:28 < \amethyst> psaikido:  :help :bufdo    :help :norm  :help exe  :help -c 


Move current line to the top of the window:~
zt


Folding:~
highlight a block with shift+v and movements
then zf to create fold
zo opens and zc closes


Fold all functions in a file:~
g:function:exe "norm v$%zf"


With lots of windows open within a session you can save it with:~
:mks [name].vims
and then use that file to open the whole lot next time ie:
vim -S [name].vims


Multiple file search and replace for multiple things:~
eg:make a file with the commands that you want in like this..
  %s: BankDepositDates: tx_wcfmem_BankDepositDates:gec | update
  %s: Bursaries: tx_wcfmem_Bursaries:gec | update
  %s: Contacts: tx_wcfmem_Contacts:gec | update

..then open vim and go..
  :args *.php (this puts all the relevant files into memory buffers)
  :argdo :so [scriptName.s]


Output results of a command into a new buffer:~
enew | put=execute('set runtimepath?')
or
tabnew | put=execute('scriptnames')


Completion:~
vim 'ctrl-x ctrl-f' filename completion. 
See https://www.youtube.com/watch?v=3TX3kV3TICU&t=917s
Checkout 'ctags'.


Move through jump list:~
ctrl-i ('in')
ctrl-o ('out')


Complete entire line:~
ctrl-x ctrl-l
..when repeated it keeps context so multi-lines without typing.


Context aware omni-completion:~
ctrl-x ctrl-o


Format json:~
:%!python -m json.tool


One eyed fighting Kirby (?):~
\(.*\)
..it's a regex that amounts to "anything between"
so you can use it in substitutions like this:
say you want to wrap the contents of a div:
  <div>thing</div>
:'<,'>s:>\(.*\)<:><span>\1</span><:
which gives:
  <div><span>thing</span></div>
which breaks down as:
'<,'>s --whatever is visually selected do a substitution (s)
:>\(.*\)<: --whatever is found between '>' and '<' is matched as \1
:><span>\1</span><: --substitute the extra text and put in the matched group


Tabularise:~
Visual select then
>
  :'<,'>!column -t

<you can `man column` for more options as it is a standard unix tool.
You can call eg. `!sort -k2` to sort on column 2.


vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
